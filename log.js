IncomingMessage {
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { length: 0 },
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: false,
       ended: true,
       endEmitted: true,
       reading: false,
       errorEmitted: false,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: true,
       resumeScheduled: false,
       emitClose: true,
       destroyed: false,
       defaultEncoding: 'utf8',
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null },
    readable: false,
    _events: { readable: [Function: bound ] },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket:
     Socket {
       connecting: false,
       _hadError: false,
       _handle:
        TCP {
          reading: true,
          owner: [Circular],
          onread: [Function: onread],
          onconnection: null,
          _consumed: true },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          errorEmitted: false,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        { end: [Array],
          drain: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause] },
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: [Object] },
       writable: true,
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       _server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       parser:
        HTTPParser {
          '0': [Function: parserOnHeaders],
          '1': [Function: parserOnHeadersComplete],
          '2': [Function: parserOnBody],
          '3': [Function: parserOnMessageComplete],
          '4': [Function: bound onParserExecute],
          _headers: [],
          _url: '',
          _consumed: true,
          socket: [Circular],
          incoming: [Circular],
          outgoing: null,
          maxHeaderPairs: 2000,
          onIncoming: [Function: bound parserOnIncoming] },
       on: [Function: socketOnWrap],
       _paused: false,
       _httpMessage:
        ServerResponse {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          output: [],
          outputEncodings: [],
          outputCallbacks: [],
          outputSize: 0,
          writable: true,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular],
          connection: [Circular],
          _header: null,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular],
          locals: {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(isCorked)]: false,
          [Symbol(outHeadersKey)]: [Object] },
       _peername: { address: '::1', family: 'IPv6', port: 62848 },
       [Symbol(asyncId)]: 434,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _called: false,
          _idleTimeout: 120000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2302,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(unrefed)]: true,
          [Symbol(asyncId)]: 435,
          [Symbol(triggerId)]: 434 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    connection:
     Socket {
       connecting: false,
       _hadError: false,
       _handle:
        TCP {
          reading: true,
          owner: [Circular],
          onread: [Function: onread],
          onconnection: null,
          _consumed: true },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          errorEmitted: false,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        { end: [Array],
          drain: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause] },
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: [Object] },
       writable: true,
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       _server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       parser:
        HTTPParser {
          '0': [Function: parserOnHeaders],
          '1': [Function: parserOnHeadersComplete],
          '2': [Function: parserOnBody],
          '3': [Function: parserOnMessageComplete],
          '4': [Function: bound onParserExecute],
          _headers: [],
          _url: '',
          _consumed: true,
          socket: [Circular],
          incoming: [Circular],
          outgoing: null,
          maxHeaderPairs: 2000,
          onIncoming: [Function: bound parserOnIncoming] },
       on: [Function: socketOnWrap],
       _paused: false,
       _httpMessage:
        ServerResponse {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          output: [],
          outputEncodings: [],
          outputCallbacks: [],
          outputSize: 0,
          writable: true,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular],
          connection: [Circular],
          _header: null,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular],
          locals: {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(isCorked)]: false,
          [Symbol(outHeadersKey)]: [Object] },
       _peername: { address: '::1', family: 'IPv6', port: 62848 },
       [Symbol(asyncId)]: 434,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _called: false,
          _idleTimeout: 120000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2302,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(unrefed)]: true,
          [Symbol(asyncId)]: 435,
          [Symbol(triggerId)]: 434 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers:
     { host: 'localhost:2000',
       connection: 'keep-alive',
       'content-length': '2229',
       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
       'cache-control': 'no-cache',
       origin: 'chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop',
       'postman-token': '9afe92e9-4cf7-b21b-4f95-8ccb34d4f122',
       'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryW0JVeP2vjpYxUe49',
       accept: '*/*',
       'accept-encoding': 'gzip, deflate, br',
       'accept-language': 'en-US,en;q=0.9,de;q=0.8' },
    rawHeaders:
     [ 'Host',
       'localhost:2000',
       'Connection',
       'keep-alive',
       'Content-Length',
       '2229',
       'User-Agent',
       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
       'Cache-Control',
       'no-cache',
       'Origin',
       'chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop',
       'Postman-Token',
       '9afe92e9-4cf7-b21b-4f95-8ccb34d4f122',
       'Content-Type',
       'multipart/form-data; boundary=----WebKitFormBoundaryW0JVeP2vjpYxUe49',
       'Accept',
       '*/*',
       'Accept-Encoding',
       'gzip, deflate, br',
       'Accept-Language',
       'en-US,en;q=0.9,de;q=0.8' ],
    trailers: {},
    rawTrailers: [],
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client:
     Socket {
       connecting: false,
       _hadError: false,
       _handle:
        TCP {
          reading: true,
          owner: [Circular],
          onread: [Function: onread],
          onconnection: null,
          _consumed: true },
       _parent: null,
       _host: null,
       _readableState:
        ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { length: 0 },
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          errorEmitted: false,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          emitClose: false,
          destroyed: false,
          defaultEncoding: 'utf8',
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        { end: [Array],
          drain: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause] },
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          bufferedRequest: null,
          lastBufferedRequest: null,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          bufferedRequestCount: 0,
          corkedRequestsFree: [Object] },
       writable: true,
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       _server:
        Server {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          httpAllowHalfOpen: false,
          timeout: 120000,
          keepAliveTimeout: 5000,
          _pendingResponseData: 0,
          maxHeadersCount: null,
          _connectionKey: '6::::2000',
          [Symbol(IncomingMessage)]: [Function],
          [Symbol(ServerResponse)]: [Function],
          [Symbol(asyncId)]: 14 },
       parser:
        HTTPParser {
          '0': [Function: parserOnHeaders],
          '1': [Function: parserOnHeadersComplete],
          '2': [Function: parserOnBody],
          '3': [Function: parserOnMessageComplete],
          '4': [Function: bound onParserExecute],
          _headers: [],
          _url: '',
          _consumed: true,
          socket: [Circular],
          incoming: [Circular],
          outgoing: null,
          maxHeaderPairs: 2000,
          onIncoming: [Function: bound parserOnIncoming] },
       on: [Function: socketOnWrap],
       _paused: false,
       _httpMessage:
        ServerResponse {
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          output: [],
          outputEncodings: [],
          outputCallbacks: [],
          outputSize: 0,
          writable: true,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          socket: [Circular],
          connection: [Circular],
          _header: null,
          _onPendingData: [Function: bound updateOutgoingData],
          _sent100: false,
          _expect_continue: false,
          req: [Circular],
          locals: {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(isCorked)]: false,
          [Symbol(outHeadersKey)]: [Object] },
       _peername: { address: '::1', family: 'IPv6', port: 62848 },
       [Symbol(asyncId)]: 434,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]:
        Timeout {
          _called: false,
          _idleTimeout: 120000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2302,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(unrefed)]: true,
          [Symbol(asyncId)]: 435,
          [Symbol(triggerId)]: 434 },
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0 },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/products',
    originalUrl: '/products',
    _parsedUrl:
     Url {
       protocol: null,
       slashes: null,
       auth: null,
       host: null,
       port: null,
       hostname: null,
       hash: null,
       search: null,
       query: null,
       pathname: '/',
       path: '/',
       href: '/',
       _raw: '/' },
    params: {},
    query: {},
    res:
     ServerResponse {
       _events: { finish: [Array], end: [Function: onevent] },
       _eventsCount: 2,
       _maxListeners: undefined,
       output: [],
       outputEncodings: [],
       outputCallbacks: [],
       outputSize: 0,
       writable: true,
       _last: false,
       chunkedEncoding: false,
       shouldKeepAlive: true,
       useChunkedEncodingByDefault: true,
       sendDate: true,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: null,
       _hasBody: true,
       _trailer: '',
       finished: false,
       _headerSent: false,
       socket:
        Socket {
          connecting: false,
          _hadError: false,
          _handle: [TCP],
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          readable: true,
          _events: [Object],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketOnWrap],
          _paused: false,
          _httpMessage: [Circular],
          _peername: [Object],
          [Symbol(asyncId)]: 434,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: [Timeout],
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0 },
       connection:
        Socket {
          connecting: false,
          _hadError: false,
          _handle: [TCP],
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          readable: true,
          _events: [Object],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketOnWrap],
          _paused: false,
          _httpMessage: [Circular],
          _peername: [Object],
          [Symbol(asyncId)]: 434,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: [Timeout],
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0 },
       _header: null,
       _onPendingData: [Function: bound updateOutgoingData],
       _sent100: false,
       _expect_continue: false,
       req: [Circular],
       locals: {},
       _startAt: undefined,
       _startTime: undefined,
       writeHead: [Function: writeHead],
       __onFinished: { [Function: listener] queue: [Array] },
       [Symbol(isCorked)]: false,
       [Symbol(outHeadersKey)]:
        { 'x-powered-by': [Array],
          'access-control-allow-origin': [Array],
          'access-control-allow-headers': [Array] } },
    _startAt: [ 21475, 610088479 ],
    _startTime: 2018-07-19T19:24:19.684Z,
    _remoteAddress: '::1',
    body: { name: 'Harry Potter', price: '12.55' },
    route:
     Route {
       path: '/',
       stack: [ [Layer], [Layer] ],
       methods: { post: true } },
    file:
     { fieldname: 'productImage',
       originalname: 'download2.jpeg',
       encoding: '7bit',
       mimetype: 'image/jpeg',
       destination: './uploads/',
       filename: '2018-07-19T19:24:19.692Zdownload2.jpeg',
       path: 'uploads/2018-07-19T19:24:19.692Zdownload2.jpeg',
       size: 1833 },
    __onFinished: null }
  ::1 - - [19/Jul/2018:19:24:19 +0000] "POST /products HTTP/1.1" 201 226 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"
  